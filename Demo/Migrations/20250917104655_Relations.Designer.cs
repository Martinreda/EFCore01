// <auto-generated />
using Demo.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Demo.Migrations
{
    [DbContext(typeof(CompanyDBcontext))]
    [Migration("20250917104655_Relations")]
    partial class Relations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Demo.Model.Department", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeptId"));

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("varchar (50)");

                    b.Property<int>("MangerId")
                        .HasColumnType("int");

                    b.HasKey("DeptId");

                    b.HasIndex("MangerId")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Demo.Model.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar (50)")
                        .HasColumnName("EmpName");

                    b.Property<decimal>("salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("DeptId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Demo.Model.User", b =>
                {
                    b.Property<int>("SSN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SSN"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Varchar(50)")
                        .HasColumnName("UserName");

                    b.HasKey("SSN");

                    b.ToTable("usersTable");
                });

            modelBuilder.Entity("Demo.Model.Department", b =>
                {
                    b.HasOne("Demo.Model.Employee", "Manger")
                        .WithOne("MangedDept")
                        .HasForeignKey("Demo.Model.Department", "MangerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Manger");
                });

            modelBuilder.Entity("Demo.Model.Employee", b =>
                {
                    b.HasOne("Demo.Model.Department", "department")
                        .WithMany("employees")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("Demo.Model.Address", "EmpAddress", b1 =>
                        {
                            b1.Property<int>("Employeeid")
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Employeeid");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("Employeeid");
                        });

                    b.Navigation("EmpAddress")
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("Demo.Model.Department", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("Demo.Model.Employee", b =>
                {
                    b.Navigation("MangedDept")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
